<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on blueturtle.dev</title><link>https://blueturtle.dev/posts/</link><description>Recent content in Posts on blueturtle.dev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 26 Apr 2023 07:29:25 +0800</lastBuildDate><atom:link href="https://blueturtle.dev/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>同步MTP Device裡的資料</title><link>https://blueturtle.dev/posts/sync-to-mtp/</link><pubDate>Wed, 26 Apr 2023 07:29:25 +0800</pubDate><guid>https://blueturtle.dev/posts/sync-to-mtp/</guid><description> 鬱金香 使用情境 有個儲存裝置透過 USB 連接到電腦，他的連接協定不是用USB MSC (Usb Mass Storage Device Class)而是MTP，如果想讓裝置內的某個資料夾與本機的資料夾同步，可以怎麼做?
與USB MSC不同的是，透過MTP協定連接的儲存裝置不像一般的隨身碟會掛載到檔案系統中，也就是在電腦裡找不到一個實際存在的儲存空間 (Volume)可供操作
我的同步任務需要同時滿足以下兩個條件:
只複製裝置上不存在的檔案過去 遇到檔案已存在裝置上時自動忽略 探索解決方案 透過檔案總管手動拖拉 這個解法很明顯沒辦法滿足條件，因為複製時遇到檔案已存在的情況會不停跳出是否要覆蓋原有檔案的詢問，如果選擇不要覆蓋就會取消後續的動作
透過命令列或腳本 我有找到很多命令列工具像是xcopy或robocopy可以滿足同步任務的條件，但問題來了，下指令時我的目的地路徑參數要怎麼輸入，透過 MTP 協定連接的儲存裝置不會存在檔案系統中，所以要先用mtpmount將MTP Storage掛載到檔案系統再做後續操作，或直接用我最後選擇的解決方案mtpcopy
mtpcopy kzmi/mtpcopy
安裝 我是透過 Scoop (套件管理工具)安裝到電腦裡
&amp;gt; scoop install mtpcopy --global列出所有的 MTP Storage &amp;gt; mtpcopy storagesWALKMAN:Internal shared storage:WALKMAN:Lyra:可以看到我有兩個 storage，一個是裝置上的內部儲存空間，另一個是裝置上的記憶卡儲存空間名為Lyra
同步資料 &amp;gt; mtpcopy copy -R C:\Users\hugo\Music\Music\ WALKMAN:Lyra:\Music\列出路徑匹配到的所有檔案 PS C:\Users\hugo&amp;gt; mtpcopy list WALKMAN:Lyra:\Music\John*WALKMAN:Lyra:\Music\John MayerWALKMAN:Lyra:\Music\John Williams</description></item><item><title>ORM的誕生及了解JPA, Hibernate 與 Spring Data JPA之間的關係</title><link>https://blueturtle.dev/posts/orm-is-born/</link><pubDate>Wed, 22 Mar 2023 20:03:18 +0800</pubDate><guid>https://blueturtle.dev/posts/orm-is-born/</guid><description>清境農場的綿羊 在沒有ORM之前應用程式是怎麼跟資料庫交流的 我們必須透過JDBC API(Java Database Connectivity API)的介面搭配該資料庫適用的JDBC Driver去跟資料庫連接
JDBC 不同的資料庫有不同的JDBC Driver，透過DriverManager針對不同的請求去回傳對應的JDBC Driver
JDBC Driver Manager ORM的誕生 除了上述談到針對不同的資料庫有不同的連接方式這個問題，還有應用程式內的資料要怎麼對映到資料表也是個問題，ORM(Object Relational Mapping)的出現就是為了解決這些麻煩的事情，若少了ORM我們要手動去處理資料在這兩者之間的映對關係
物件模型與資料表的關係 在操作時要把映對關係設定好才能讓資料在物件模型與資料表中做轉換，若資料表改變了結構，映對關係也要同步做調整，實務上資料庫不會只有一種，可能有MySQL、DB2、SQL Server之類的，不同的資料庫有不同的結構與SQL語法，透過ORM的抽象層去設定映對關係，這樣就可以專注在跟業務邏輯有關的代碼上，不用煩惱操作不同的資料庫時，應用程式要做哪些調整才能取得那些資料，ORM是位於資料庫與應用程式間的中間層，透過ORM提供的API介面幫你去跟資料庫打交道，聽起來一切都很美好但也有一些缺點
要多學一套ORM的API 比較複雜的功能沒有辦法單獨透過ORM來完成，還是需要SQL 多了ORM應用程式的性能會有些損失 加入ORM 雖然有提到使用ORM會損失性能，但這並不是造成應用程式緩慢的關鍵，會造成緩慢多半是因為SQL語法沒有最佳化、資料庫設計不佳、應用程式架構不良等其他因素導致的，也就是說如果沒有明確的原因，ORM帶來的性能損失可以暫且不論
JPA是什麼? JPA全名為Jakarta Persistence API 或在早期叫 Java Persistence API，是一個Java官方為了實現ORM所制定的一套標準規範(Specification)及接口(API)，要注意這是一個規範沒辦法給開發者直接使用，必須透過像是Hibernate、OpenJPA或TopLink之類的JPA Provider才行
加入實作JPA的ORM Hibernate是什麼? Hibernate是Java生態系中最廣泛使用的ORM框架並且實作了JPA的規範
Spring Data JPA是什麼? 雖然我們有了ORM來幫助我們處理訪問持久層的操作，但這些ORM框架基於JPA規範又各自擴展了其他功能，導致開發人員無法在這些ORM框架之間無縫切換，於是Spring提出了Spring Data JPA這個解決方案，它是位於JPA與各個ORM框架之間經過抽象化的資料存取層(Data Access Layer)，這樣在Spring底下開發應用程式就不用管底下的ORM框架怎麼變化了
加入Spring Data JPA 總結 希望這篇文章能幫助讀者了解為什麼要有ORM及什麼是ORM，還有JPA, Hibernate與Spring Data JPA之間的關係，這些觀念對於剛踏入Spring世界的我來說很有幫助</description></item><item><title>在PowerShell底下使用Jabba來管理JDK</title><link>https://blueturtle.dev/posts/jabba-jdk-manager/</link><pubDate>Thu, 16 Mar 2023 19:30:16 +0800</pubDate><guid>https://blueturtle.dev/posts/jabba-jdk-manager/</guid><description>彰化波波草 前言 我想要讓我的PowerShell環境在調用JDK時有彈性可以隨時切換版本靈活使用，在WSL底下有sdkman可以用，但在Pure PowerShell底下就要找別的解決方案，我找到了一個叫Jabba的工具，這篇文章簡單介紹如何安裝及使用
Jabba 官方介紹
Java Version Manager inspired by nvm (Node.js). Written in Go.
安裝 避免用Scoop來安裝Jabba 雖然我很喜歡用Scoop(一種套件管理工具像是macOS上的homebrew)管理我所有的開發工具，但這邊用Scoop來安裝Jabba會有一些問題應該避免使用
相關issue
這篇文章也有提到這點
直接用官方提供的指令來安裝 用PowerShell執行以下指令
[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12Invoke-Expression (Invoke-WebRequest https://github.com/shyiko/jabba/raw/master/install.ps1 -UseBasicParsing).Content(use the same command to upgrade)基本使用 列出所有Java 17版本可供安裝的JDK &amp;gt; jabba ls-remote | grep 1.17amazon-corretto@1.17.0-0.35.1openjdk@1.17.0openjdk-ri@1.17.0zulu@1.17.0-0安裝openjdk@1.17.0 &amp;gt; jabba install openjdk@1.17.0&amp;gt; jabba currentopenjdk@1.17.0安裝完會直接將當前的JDK切換至該版本
透過alias default設定預設的JDK版本 &amp;gt; jabba alias default openjdk@1.17.0default -&amp;gt; C:\Users\hugo\.</description></item><item><title>避免注意力分散 Avoid space out</title><link>https://blueturtle.dev/posts/avoid-space-out/</link><pubDate>Thu, 23 Feb 2023 07:15:39 +0800</pubDate><guid>https://blueturtle.dev/posts/avoid-space-out/</guid><description>北投櫻花 前言 我經常會在處理一件事的時候用力過頭，一口氣把全部的精力投入進去，過度思考問題把事情複雜化，最後被衍生出來的更多事情淹沒然後自我放棄，這個習慣不但對我的生產力有害且挫敗的經驗長久下來會傷害我的身心健康，我想要先用 限制資源 這個方法試著不要讓我在處理事情的時候失去控制
限制資源 要不試著在每次處理事情的時候限制自己只能花30分鐘的時間處理，每個單位(30分鐘)我把它稱為一個子工作，如果這次執行子工作在資源結束時沒有處理完是正常的，如果需要很多個子工作才能完成是正常的，這就是一件事情在處理時必然會發生的過程
正向回饋 期待每次事情結束時都能拿到超過滿分的表現是沒有必要的，我要把追求完美的性格暫時先放在一邊，我要持續累積處理子工作時帶給我的感覺與回饋，好的回饋期待將它投入到下一次的子工作中，若出現不好的回饋我可以在子工作結束時做適當的調整，讓下一次的投入更順利進行</description></item></channel></rss>